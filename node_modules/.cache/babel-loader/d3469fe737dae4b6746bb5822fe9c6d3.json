{"ast":null,"code":"var _jsxFileName = \"/home/varun/Code/opensource/Textutils/src/components/TextForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n\n  const handleUpClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to uppercase!\", \"success\");\n  };\n\n  const handleLoClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to lowercase!\", \"success\");\n  };\n\n  const handleClearClick = () => {\n    let newText = '';\n    setText(newText);\n    props.showAlert(\"Text Cleared!\", \"success\");\n  };\n\n  const handleOnChange = event => {\n    setText(event.target.value);\n  }; // Credits: A\n\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(text);\n    props.showAlert(\"Copied to Clipboard!\", \"success\");\n  }; // Credits: Coding Wala\n\n\n  const handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Extra spaces removed!\", \"success\");\n  }; //Credits: Varun Singh\n\n\n  const handleReverseText = () => {\n    let newText = text.split(/[ ]+/);\n    let finalText = [];\n\n    for (let i = newText.length - 1; i > 0; i--) {\n      finalText.push(newText[i]);\n    }\n\n    finalText.join(\"\");\n    setText(finalText);\n    props.showAlert(\"Text Reversed!\", \"success\");\n  };\n\n  const [text, setText] = useState(''); // text = \"new text\"; // Wrong way to change the state\n  // setText(\"new text\"); // Correct way to change the state\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : '#042743'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-4\",\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          style: {\n            backgroundColor: props.mode === 'dark' ? '#13466e' : 'white',\n            color: props.mode === 'dark' ? 'white' : '#042743'\n          },\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleUpClick,\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleLoClick,\n        children: \"Convert to Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleClearClick,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleCopy,\n        children: \"Copy Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleExtraSpaces,\n        children: \"Remove Extra Spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleReverseText,\n        children: \"Reverse Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : '#042743'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(/\\s+/).filter(element => {\n          return element.length !== 0;\n        }).length, \" words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(/\\s+/).filter(element => {\n          return element.length !== 0;\n        }).length, \" Minutes read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Nothing to preview!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TextForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = TextForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"sources":["/home/varun/Code/opensource/Textutils/src/components/TextForm.js"],"names":["React","useState","TextForm","props","handleUpClick","newText","text","toUpperCase","setText","showAlert","handleLoClick","toLowerCase","handleClearClick","handleOnChange","event","target","value","handleCopy","navigator","clipboard","writeText","handleExtraSpaces","split","join","handleReverseText","finalText","i","length","push","color","mode","heading","backgroundColor","filter","element"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\n\nexport default function TextForm(props) {\n    const handleUpClick = ()=>{\n        let newText = text.toUpperCase();\n        setText(newText)\n        props.showAlert(\"Converted to uppercase!\", \"success\");\n    }\n\n    const handleLoClick = ()=>{ \n        let newText = text.toLowerCase();\n        setText(newText)\n        props.showAlert(\"Converted to lowercase!\", \"success\");\n    }\n\n    const handleClearClick = ()=>{ \n        let newText = '';\n        setText(newText);\n        props.showAlert(\"Text Cleared!\", \"success\");\n    }\n\n    const handleOnChange = (event)=>{\n        setText(event.target.value) \n    }\n\n    // Credits: A\n    const handleCopy = () => {\n        navigator.clipboard.writeText(text); \n        props.showAlert(\"Copied to Clipboard!\", \"success\");\n    }\n\n    // Credits: Coding Wala\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Extra spaces removed!\", \"success\");\n    }\n\n    //Credits: Varun Singh\n    const handleReverseText = () => {\n        let newText = text.split(/[ ]+/);\n        let finalText = [];\n        for(let i = newText.length - 1; i > 0 ; i--){\n            finalText.push(newText[i])\n        }\n        finalText.join(\"\");\n        setText(finalText);\n        props.showAlert(\"Text Reversed!\", \"success\");\n    }\n\n    const [text, setText] = useState(''); \n    // text = \"new text\"; // Wrong way to change the state\n    // setText(\"new text\"); // Correct way to change the state\n    return (\n        <>\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \n            <h1 className='mb-4'>{props.heading}</h1>\n            <div className=\"mb-3\"> \n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleReverseText}>Reverse Text</button>\n        </div>\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\n            <h2>Your text summary</h2>\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\n            <p>{0.008 *  text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\n        </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}